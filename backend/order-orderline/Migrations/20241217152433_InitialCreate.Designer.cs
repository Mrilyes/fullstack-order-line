// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using order_orderline.Infrastructure.Data;

#nullable disable

namespace order_orderline.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241217152433_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("order_orderline.Domain.Entites.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ArticleId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            Name = "Product A",
                            Price = 100m
                        },
                        new
                        {
                            ArticleId = 2,
                            Name = "Product B",
                            Price = 150m
                        });
                });

            modelBuilder.Entity("order_orderline.Domain.Entites.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerName = "John Doe",
                            OrderDate = new DateOnly(2024, 12, 17),
                            OrderNumber = "ORD001"
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerName = "Jane Smith",
                            OrderDate = new DateOnly(2024, 12, 16),
                            OrderNumber = "ORD002"
                        });
                });

            modelBuilder.Entity("order_orderline.Domain.Entites.OrderLine", b =>
                {
                    b.Property<int>("OrderLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderLineId"));

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int?>("ArticleId1")
                        .HasColumnType("int");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderLineId");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ArticleId1");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderLines");

                    b.HasData(
                        new
                        {
                            OrderLineId = 1,
                            ArticleId = 1,
                            OrderId = 1,
                            Price = 100m,
                            Quantity = 2
                        },
                        new
                        {
                            OrderLineId = 2,
                            ArticleId = 2,
                            OrderId = 2,
                            Price = 150m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("order_orderline.Domain.Entites.OrderLine", b =>
                {
                    b.HasOne("order_orderline.Domain.Entites.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleId");

                    b.HasOne("order_orderline.Domain.Entites.Article", null)
                        .WithMany("OrderLines")
                        .HasForeignKey("ArticleId1");

                    b.HasOne("order_orderline.Domain.Entites.Order", "Order")
                        .WithMany("OrderLines")
                        .HasForeignKey("OrderId");

                    b.Navigation("Article");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("order_orderline.Domain.Entites.Article", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("order_orderline.Domain.Entites.Order", b =>
                {
                    b.Navigation("OrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
